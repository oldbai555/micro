// 指定proto版本

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: gormx.proto

// 指定默认包名

package engine

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetModelListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjType             string   `protobuf:"bytes,1,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	Cond                string   `protobuf:"bytes,2,opt,name=cond,proto3" json:"cond,omitempty"`
	Order               string   `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
	Offset              uint32   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit               uint32   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Fields              []string `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	SkipCount           bool     `protobuf:"varint,7,opt,name=skip_count,json=skipCount,proto3" json:"skip_count,omitempty"`
	WithLinks           []string `protobuf:"bytes,8,rep,name=with_links,json=withLinks,proto3" json:"with_links,omitempty"`
	Db                  string   `protobuf:"bytes,9,opt,name=db,proto3" json:"db,omitempty"`
	TrId                string   `protobuf:"bytes,10,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	Table               string   `protobuf:"bytes,11,opt,name=table,proto3" json:"table,omitempty"`
	Group               string   `protobuf:"bytes,12,opt,name=group,proto3" json:"group,omitempty"`
	Skips               []string `protobuf:"bytes,13,rep,name=skips,proto3" json:"skips,omitempty"`
	Unscoped            bool     `protobuf:"varint,14,opt,name=unscoped,proto3" json:"unscoped,omitempty"`
	ReturnUnknownFields bool     `protobuf:"varint,15,opt,name=return_unknown_fields,json=returnUnknownFields,proto3" json:"return_unknown_fields,omitempty"`
	CorpId              uint32   `protobuf:"varint,16,opt,name=corp_id,json=corpId,proto3" json:"corp_id,omitempty"`
	CodeFileLineFunc    string   `protobuf:"bytes,17,opt,name=code_file_line_func,json=codeFileLineFunc,proto3" json:"code_file_line_func,omitempty"`
	Analyse             bool     `protobuf:"varint,18,opt,name=analyse,proto3" json:"analyse,omitempty"`
	ScanDb              bool     `protobuf:"varint,19,opt,name=scan_db,json=scanDb,proto3" json:"scan_db,omitempty"`
	Values              []string `protobuf:"bytes,20,rep,name=values,proto3" json:"values,omitempty"`
	UseBiz              bool     `protobuf:"varint,21,opt,name=use_biz,json=useBiz,proto3" json:"use_biz,omitempty"`
	NeedCount           bool     `protobuf:"varint,22,opt,name=need_count,json=needCount,proto3" json:"need_count,omitempty"`
	IgnoreBroken        bool     `protobuf:"varint,23,opt,name=ignore_broken,json=ignoreBroken,proto3" json:"ignore_broken,omitempty"`
}

func (x *GetModelListReq) Reset() {
	*x = GetModelListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelListReq) ProtoMessage() {}

func (x *GetModelListReq) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelListReq.ProtoReflect.Descriptor instead.
func (*GetModelListReq) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{0}
}

func (x *GetModelListReq) GetObjType() string {
	if x != nil {
		return x.ObjType
	}
	return ""
}

func (x *GetModelListReq) GetCond() string {
	if x != nil {
		return x.Cond
	}
	return ""
}

func (x *GetModelListReq) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *GetModelListReq) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetModelListReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetModelListReq) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetModelListReq) GetSkipCount() bool {
	if x != nil {
		return x.SkipCount
	}
	return false
}

func (x *GetModelListReq) GetWithLinks() []string {
	if x != nil {
		return x.WithLinks
	}
	return nil
}

func (x *GetModelListReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *GetModelListReq) GetTrId() string {
	if x != nil {
		return x.TrId
	}
	return ""
}

func (x *GetModelListReq) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *GetModelListReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GetModelListReq) GetSkips() []string {
	if x != nil {
		return x.Skips
	}
	return nil
}

func (x *GetModelListReq) GetUnscoped() bool {
	if x != nil {
		return x.Unscoped
	}
	return false
}

func (x *GetModelListReq) GetReturnUnknownFields() bool {
	if x != nil {
		return x.ReturnUnknownFields
	}
	return false
}

func (x *GetModelListReq) GetCorpId() uint32 {
	if x != nil {
		return x.CorpId
	}
	return 0
}

func (x *GetModelListReq) GetCodeFileLineFunc() string {
	if x != nil {
		return x.CodeFileLineFunc
	}
	return ""
}

func (x *GetModelListReq) GetAnalyse() bool {
	if x != nil {
		return x.Analyse
	}
	return false
}

func (x *GetModelListReq) GetScanDb() bool {
	if x != nil {
		return x.ScanDb
	}
	return false
}

func (x *GetModelListReq) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *GetModelListReq) GetUseBiz() bool {
	if x != nil {
		return x.UseBiz
	}
	return false
}

func (x *GetModelListReq) GetNeedCount() bool {
	if x != nil {
		return x.NeedCount
	}
	return false
}

func (x *GetModelListReq) GetIgnoreBroken() bool {
	if x != nil {
		return x.IgnoreBroken
	}
	return false
}

type GetModelListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsJson     string `protobuf:"bytes,1,opt,name=rows_json,json=rowsJson,proto3" json:"rows_json,omitempty"`
	Total        uint32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	CorpId       uint32 `protobuf:"varint,3,opt,name=corp_id,json=corpId,proto3" json:"corp_id,omitempty"`
	ScanDbFinish bool   `protobuf:"varint,4,opt,name=scan_db_finish,json=scanDbFinish,proto3" json:"scan_db_finish,omitempty"`
	NextOffset   uint32 `protobuf:"varint,5,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
}

func (x *GetModelListRsp) Reset() {
	*x = GetModelListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModelListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModelListRsp) ProtoMessage() {}

func (x *GetModelListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModelListRsp.ProtoReflect.Descriptor instead.
func (*GetModelListRsp) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{1}
}

func (x *GetModelListRsp) GetRowsJson() string {
	if x != nil {
		return x.RowsJson
	}
	return ""
}

func (x *GetModelListRsp) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetModelListRsp) GetCorpId() uint32 {
	if x != nil {
		return x.CorpId
	}
	return 0
}

func (x *GetModelListRsp) GetScanDbFinish() bool {
	if x != nil {
		return x.ScanDbFinish
	}
	return false
}

func (x *GetModelListRsp) GetNextOffset() uint32 {
	if x != nil {
		return x.NextOffset
	}
	return 0
}

type InsertModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjType          string   `protobuf:"bytes,1,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	JsonData         string   `protobuf:"bytes,2,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	Db               string   `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	Skips            []string `protobuf:"bytes,4,rep,name=skips,proto3" json:"skips,omitempty"`
	TrId             string   `protobuf:"bytes,5,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	Table            string   `protobuf:"bytes,6,opt,name=table,proto3" json:"table,omitempty"`
	CorpId           uint32   `protobuf:"varint,7,opt,name=corp_id,json=corpId,proto3" json:"corp_id,omitempty"`
	CodeFileLineFunc string   `protobuf:"bytes,8,opt,name=code_file_line_func,json=codeFileLineFunc,proto3" json:"code_file_line_func,omitempty"`
	IgnoreBroken     bool     `protobuf:"varint,10,opt,name=ignore_broken,json=ignoreBroken,proto3" json:"ignore_broken,omitempty"`
}

func (x *InsertModelReq) Reset() {
	*x = InsertModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertModelReq) ProtoMessage() {}

func (x *InsertModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertModelReq.ProtoReflect.Descriptor instead.
func (*InsertModelReq) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{2}
}

func (x *InsertModelReq) GetObjType() string {
	if x != nil {
		return x.ObjType
	}
	return ""
}

func (x *InsertModelReq) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *InsertModelReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *InsertModelReq) GetSkips() []string {
	if x != nil {
		return x.Skips
	}
	return nil
}

func (x *InsertModelReq) GetTrId() string {
	if x != nil {
		return x.TrId
	}
	return ""
}

func (x *InsertModelReq) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *InsertModelReq) GetCorpId() uint32 {
	if x != nil {
		return x.CorpId
	}
	return 0
}

func (x *InsertModelReq) GetCodeFileLineFunc() string {
	if x != nil {
		return x.CodeFileLineFunc
	}
	return ""
}

func (x *InsertModelReq) GetIgnoreBroken() bool {
	if x != nil {
		return x.IgnoreBroken
	}
	return false
}

type InsertModelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonData string `protobuf:"bytes,1,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *InsertModelRsp) Reset() {
	*x = InsertModelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertModelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertModelRsp) ProtoMessage() {}

func (x *InsertModelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertModelRsp.ProtoReflect.Descriptor instead.
func (*InsertModelRsp) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{3}
}

func (x *InsertModelRsp) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type DelModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjType          string   `protobuf:"bytes,1,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	Cond             string   `protobuf:"bytes,2,opt,name=cond,proto3" json:"cond,omitempty"`
	Db               string   `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	TrId             string   `protobuf:"bytes,4,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	Table            string   `protobuf:"bytes,5,opt,name=table,proto3" json:"table,omitempty"`
	Unscoped         bool     `protobuf:"varint,6,opt,name=unscoped,proto3" json:"unscoped,omitempty"`
	Limit            uint32   `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	CorpId           uint32   `protobuf:"varint,8,opt,name=corp_id,json=corpId,proto3" json:"corp_id,omitempty"`
	CodeFileLineFunc string   `protobuf:"bytes,9,opt,name=code_file_line_func,json=codeFileLineFunc,proto3" json:"code_file_line_func,omitempty"`
	Values           []string `protobuf:"bytes,10,rep,name=values,proto3" json:"values,omitempty"`
	IgnoreBroken     bool     `protobuf:"varint,11,opt,name=ignore_broken,json=ignoreBroken,proto3" json:"ignore_broken,omitempty"`
}

func (x *DelModelReq) Reset() {
	*x = DelModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelModelReq) ProtoMessage() {}

func (x *DelModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelModelReq.ProtoReflect.Descriptor instead.
func (*DelModelReq) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{4}
}

func (x *DelModelReq) GetObjType() string {
	if x != nil {
		return x.ObjType
	}
	return ""
}

func (x *DelModelReq) GetCond() string {
	if x != nil {
		return x.Cond
	}
	return ""
}

func (x *DelModelReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *DelModelReq) GetTrId() string {
	if x != nil {
		return x.TrId
	}
	return ""
}

func (x *DelModelReq) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *DelModelReq) GetUnscoped() bool {
	if x != nil {
		return x.Unscoped
	}
	return false
}

func (x *DelModelReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DelModelReq) GetCorpId() uint32 {
	if x != nil {
		return x.CorpId
	}
	return 0
}

func (x *DelModelReq) GetCodeFileLineFunc() string {
	if x != nil {
		return x.CodeFileLineFunc
	}
	return ""
}

func (x *DelModelReq) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *DelModelReq) GetIgnoreBroken() bool {
	if x != nil {
		return x.IgnoreBroken
	}
	return false
}

type DelModelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsAffected uint64 `protobuf:"varint,1,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
}

func (x *DelModelRsp) Reset() {
	*x = DelModelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelModelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelModelRsp) ProtoMessage() {}

func (x *DelModelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelModelRsp.ProtoReflect.Descriptor instead.
func (*DelModelRsp) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{5}
}

func (x *DelModelRsp) GetRowsAffected() uint64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

type UpdateModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjType          string   `protobuf:"bytes,1,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	JsonData         string   `protobuf:"bytes,2,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	Db               string   `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	Cond             string   `protobuf:"bytes,4,opt,name=cond,proto3" json:"cond,omitempty"`
	Skips            []string `protobuf:"bytes,5,rep,name=skips,proto3" json:"skips,omitempty"`
	TrId             string   `protobuf:"bytes,6,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	Table            string   `protobuf:"bytes,7,opt,name=table,proto3" json:"table,omitempty"`
	Unscoped         bool     `protobuf:"varint,15,opt,name=unscoped,proto3" json:"unscoped,omitempty"`
	CorpId           uint32   `protobuf:"varint,16,opt,name=corp_id,json=corpId,proto3" json:"corp_id,omitempty"`
	CodeFileLineFunc string   `protobuf:"bytes,17,opt,name=code_file_line_func,json=codeFileLineFunc,proto3" json:"code_file_line_func,omitempty"`
	Values           []string `protobuf:"bytes,19,rep,name=values,proto3" json:"values,omitempty"`
	ShowSql          bool     `protobuf:"varint,20,opt,name=show_sql,json=showSql,proto3" json:"show_sql,omitempty"`
	Limit            uint32   `protobuf:"varint,21,opt,name=limit,proto3" json:"limit,omitempty"`
	IgnoreBroken     bool     `protobuf:"varint,22,opt,name=ignore_broken,json=ignoreBroken,proto3" json:"ignore_broken,omitempty"`
}

func (x *UpdateModelReq) Reset() {
	*x = UpdateModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModelReq) ProtoMessage() {}

func (x *UpdateModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModelReq.ProtoReflect.Descriptor instead.
func (*UpdateModelReq) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateModelReq) GetObjType() string {
	if x != nil {
		return x.ObjType
	}
	return ""
}

func (x *UpdateModelReq) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *UpdateModelReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *UpdateModelReq) GetCond() string {
	if x != nil {
		return x.Cond
	}
	return ""
}

func (x *UpdateModelReq) GetSkips() []string {
	if x != nil {
		return x.Skips
	}
	return nil
}

func (x *UpdateModelReq) GetTrId() string {
	if x != nil {
		return x.TrId
	}
	return ""
}

func (x *UpdateModelReq) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *UpdateModelReq) GetUnscoped() bool {
	if x != nil {
		return x.Unscoped
	}
	return false
}

func (x *UpdateModelReq) GetCorpId() uint32 {
	if x != nil {
		return x.CorpId
	}
	return 0
}

func (x *UpdateModelReq) GetCodeFileLineFunc() string {
	if x != nil {
		return x.CodeFileLineFunc
	}
	return ""
}

func (x *UpdateModelReq) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *UpdateModelReq) GetShowSql() bool {
	if x != nil {
		return x.ShowSql
	}
	return false
}

func (x *UpdateModelReq) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UpdateModelReq) GetIgnoreBroken() bool {
	if x != nil {
		return x.IgnoreBroken
	}
	return false
}

type UpdateModelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsAffected uint64 `protobuf:"varint,1,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
	JsonData     string `protobuf:"bytes,2,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	Sql          string `protobuf:"bytes,3,opt,name=sql,proto3" json:"sql,omitempty"`
}

func (x *UpdateModelRsp) Reset() {
	*x = UpdateModelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateModelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateModelRsp) ProtoMessage() {}

func (x *UpdateModelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateModelRsp.ProtoReflect.Descriptor instead.
func (*UpdateModelRsp) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateModelRsp) GetRowsAffected() uint64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

func (x *UpdateModelRsp) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *UpdateModelRsp) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

type BatchInsertModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjType          string   `protobuf:"bytes,1,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	JsonDataList     []string `protobuf:"bytes,2,rep,name=json_data_list,json=jsonDataList,proto3" json:"json_data_list,omitempty"`
	Db               string   `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	IgnoreConflict   bool     `protobuf:"varint,4,opt,name=ignore_conflict,json=ignoreConflict,proto3" json:"ignore_conflict,omitempty"`
	TrId             string   `protobuf:"bytes,5,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	Table            string   `protobuf:"bytes,6,opt,name=table,proto3" json:"table,omitempty"`
	CorpId           uint32   `protobuf:"varint,7,opt,name=corp_id,json=corpId,proto3" json:"corp_id,omitempty"`
	CodeFileLineFunc string   `protobuf:"bytes,8,opt,name=code_file_line_func,json=codeFileLineFunc,proto3" json:"code_file_line_func,omitempty"`
	IgnoreBroken     bool     `protobuf:"varint,10,opt,name=ignore_broken,json=ignoreBroken,proto3" json:"ignore_broken,omitempty"`
}

func (x *BatchInsertModelReq) Reset() {
	*x = BatchInsertModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchInsertModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchInsertModelReq) ProtoMessage() {}

func (x *BatchInsertModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchInsertModelReq.ProtoReflect.Descriptor instead.
func (*BatchInsertModelReq) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{8}
}

func (x *BatchInsertModelReq) GetObjType() string {
	if x != nil {
		return x.ObjType
	}
	return ""
}

func (x *BatchInsertModelReq) GetJsonDataList() []string {
	if x != nil {
		return x.JsonDataList
	}
	return nil
}

func (x *BatchInsertModelReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *BatchInsertModelReq) GetIgnoreConflict() bool {
	if x != nil {
		return x.IgnoreConflict
	}
	return false
}

func (x *BatchInsertModelReq) GetTrId() string {
	if x != nil {
		return x.TrId
	}
	return ""
}

func (x *BatchInsertModelReq) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *BatchInsertModelReq) GetCorpId() uint32 {
	if x != nil {
		return x.CorpId
	}
	return 0
}

func (x *BatchInsertModelReq) GetCodeFileLineFunc() string {
	if x != nil {
		return x.CodeFileLineFunc
	}
	return ""
}

func (x *BatchInsertModelReq) GetIgnoreBroken() bool {
	if x != nil {
		return x.IgnoreBroken
	}
	return false
}

type BatchInsertModelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastInsertId uint64 `protobuf:"varint,1,opt,name=last_insert_id,json=lastInsertId,proto3" json:"last_insert_id,omitempty"`
	RowsAffected uint64 `protobuf:"varint,2,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
}

func (x *BatchInsertModelRsp) Reset() {
	*x = BatchInsertModelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchInsertModelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchInsertModelRsp) ProtoMessage() {}

func (x *BatchInsertModelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchInsertModelRsp.ProtoReflect.Descriptor instead.
func (*BatchInsertModelRsp) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{9}
}

func (x *BatchInsertModelRsp) GetLastInsertId() uint64 {
	if x != nil {
		return x.LastInsertId
	}
	return 0
}

func (x *BatchInsertModelRsp) GetRowsAffected() uint64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

type SetModelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjType          string   `protobuf:"bytes,1,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	JsonData         string   `protobuf:"bytes,2,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	Db               string   `protobuf:"bytes,3,opt,name=db,proto3" json:"db,omitempty"`
	Skips            []string `protobuf:"bytes,4,rep,name=skips,proto3" json:"skips,omitempty"`
	TrId             string   `protobuf:"bytes,5,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	Table            string   `protobuf:"bytes,6,opt,name=table,proto3" json:"table,omitempty"`
	Unscoped         bool     `protobuf:"varint,7,opt,name=unscoped,proto3" json:"unscoped,omitempty"`
	Cond             string   `protobuf:"bytes,8,opt,name=cond,proto3" json:"cond,omitempty"`
	CorpId           uint32   `protobuf:"varint,9,opt,name=corp_id,json=corpId,proto3" json:"corp_id,omitempty"`
	CodeFileLineFunc string   `protobuf:"bytes,10,opt,name=code_file_line_func,json=codeFileLineFunc,proto3" json:"code_file_line_func,omitempty"`
	Values           []string `protobuf:"bytes,12,rep,name=values,proto3" json:"values,omitempty"`
	IgnoreBroken     bool     `protobuf:"varint,13,opt,name=ignore_broken,json=ignoreBroken,proto3" json:"ignore_broken,omitempty"`
}

func (x *SetModelReq) Reset() {
	*x = SetModelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetModelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetModelReq) ProtoMessage() {}

func (x *SetModelReq) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetModelReq.ProtoReflect.Descriptor instead.
func (*SetModelReq) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{10}
}

func (x *SetModelReq) GetObjType() string {
	if x != nil {
		return x.ObjType
	}
	return ""
}

func (x *SetModelReq) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *SetModelReq) GetDb() string {
	if x != nil {
		return x.Db
	}
	return ""
}

func (x *SetModelReq) GetSkips() []string {
	if x != nil {
		return x.Skips
	}
	return nil
}

func (x *SetModelReq) GetTrId() string {
	if x != nil {
		return x.TrId
	}
	return ""
}

func (x *SetModelReq) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *SetModelReq) GetUnscoped() bool {
	if x != nil {
		return x.Unscoped
	}
	return false
}

func (x *SetModelReq) GetCond() string {
	if x != nil {
		return x.Cond
	}
	return ""
}

func (x *SetModelReq) GetCorpId() uint32 {
	if x != nil {
		return x.CorpId
	}
	return 0
}

func (x *SetModelReq) GetCodeFileLineFunc() string {
	if x != nil {
		return x.CodeFileLineFunc
	}
	return ""
}

func (x *SetModelReq) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *SetModelReq) GetIgnoreBroken() bool {
	if x != nil {
		return x.IgnoreBroken
	}
	return false
}

type SetModelRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowsAffected uint64 `protobuf:"varint,1,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
	JsonData     string `protobuf:"bytes,2,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
}

func (x *SetModelRsp) Reset() {
	*x = SetModelRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetModelRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetModelRsp) ProtoMessage() {}

func (x *SetModelRsp) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetModelRsp.ProtoReflect.Descriptor instead.
func (*SetModelRsp) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{11}
}

func (x *SetModelRsp) GetRowsAffected() uint64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

func (x *SetModelRsp) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type ModelObjectType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FieldList *ObjectFieldList `protobuf:"bytes,2,opt,name=field_list,json=fieldList,proto3" json:"field_list,omitempty"`
}

func (x *ModelObjectType) Reset() {
	*x = ModelObjectType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelObjectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelObjectType) ProtoMessage() {}

func (x *ModelObjectType) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelObjectType.ProtoReflect.Descriptor instead.
func (*ModelObjectType) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{12}
}

func (x *ModelObjectType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModelObjectType) GetFieldList() *ObjectFieldList {
	if x != nil {
		return x.FieldList
	}
	return nil
}

type ObjectFieldList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ObjectField `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ObjectFieldList) Reset() {
	*x = ObjectFieldList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectFieldList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectFieldList) ProtoMessage() {}

func (x *ObjectFieldList) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectFieldList.ProtoReflect.Descriptor instead.
func (*ObjectFieldList) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{13}
}

func (x *ObjectFieldList) GetList() []*ObjectField {
	if x != nil {
		return x.List
	}
	return nil
}

type ObjectField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @desc: 字段名
	FieldName string `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	// @desc: 真实类型: 比如 uint32 string bool object ...
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// @desc: 字段注释
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	IsArray bool   `protobuf:"varint,4,opt,name=is_array,json=isArray,proto3" json:"is_array,omitempty"`
}

func (x *ObjectField) Reset() {
	*x = ObjectField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gormx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectField) ProtoMessage() {}

func (x *ObjectField) ProtoReflect() protoreflect.Message {
	mi := &file_gormx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectField.ProtoReflect.Descriptor instead.
func (*ObjectField) Descriptor() ([]byte, []int) {
	return file_gormx_proto_rawDescGZIP(), []int{14}
}

func (x *ObjectField) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *ObjectField) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ObjectField) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ObjectField) GetIsArray() bool {
	if x != nil {
		return x.IsArray
	}
	return false
}

var File_gormx_proto protoreflect.FileDescriptor

var file_gormx_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x6f, 0x72, 0x6d, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67,
	0x6f, 0x72, 0x6d, 0x78, 0x22, 0x81, 0x05, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64,
	0x62, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x70, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x63,
	0x61, 0x6e, 0x5f, 0x64, 0x62, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x63, 0x61,
	0x6e, 0x44, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x5f, 0x62, 0x69, 0x7a, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x42, 0x69, 0x7a, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x65, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x6f, 0x77, 0x73, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x77, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x61, 0x6e,
	0x5f, 0x64, 0x62, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x44, 0x62, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x86, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b,
	0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x70, 0x73,
	0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x6f, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f,
	0x72, 0x70, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x46,
	0x75, 0x6e, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2d, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xae, 0x02, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x32, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f,
	0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xff, 0x02, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x6b, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x70,
	0x73, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x6e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x75, 0x6e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x63, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x73, 0x71, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77,
	0x53, 0x71, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x64,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x73, 0x70,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x71, 0x6c, 0x22, 0xa7, 0x02, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x6e, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x60,
	0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x6f, 0x77, 0x73, 0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x22, 0xcb, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x70,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x70, 0x73, 0x12, 0x13,
	0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x72,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x46, 0x75, 0x6e,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4f,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x5c, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72,
	0x6d, 0x78, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x39, 0x0a,
	0x0f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x78, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x0b, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x42,
	0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c,
	0x64, 0x62, 0x61, 0x69, 0x35, 0x35, 0x35, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x67, 0x6f,
	0x72, 0x6d, 0x78, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_gormx_proto_rawDescOnce sync.Once
	file_gormx_proto_rawDescData = file_gormx_proto_rawDesc
)

func file_gormx_proto_rawDescGZIP() []byte {
	file_gormx_proto_rawDescOnce.Do(func() {
		file_gormx_proto_rawDescData = protoimpl.X.CompressGZIP(file_gormx_proto_rawDescData)
	})
	return file_gormx_proto_rawDescData
}

var file_gormx_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_gormx_proto_goTypes = []interface{}{
	(*GetModelListReq)(nil),     // 0: gormx.GetModelListReq
	(*GetModelListRsp)(nil),     // 1: gormx.GetModelListRsp
	(*InsertModelReq)(nil),      // 2: gormx.InsertModelReq
	(*InsertModelRsp)(nil),      // 3: gormx.InsertModelRsp
	(*DelModelReq)(nil),         // 4: gormx.DelModelReq
	(*DelModelRsp)(nil),         // 5: gormx.DelModelRsp
	(*UpdateModelReq)(nil),      // 6: gormx.UpdateModelReq
	(*UpdateModelRsp)(nil),      // 7: gormx.UpdateModelRsp
	(*BatchInsertModelReq)(nil), // 8: gormx.BatchInsertModelReq
	(*BatchInsertModelRsp)(nil), // 9: gormx.BatchInsertModelRsp
	(*SetModelReq)(nil),         // 10: gormx.SetModelReq
	(*SetModelRsp)(nil),         // 11: gormx.SetModelRsp
	(*ModelObjectType)(nil),     // 12: gormx.ModelObjectType
	(*ObjectFieldList)(nil),     // 13: gormx.ObjectFieldList
	(*ObjectField)(nil),         // 14: gormx.ObjectField
}
var file_gormx_proto_depIdxs = []int32{
	13, // 0: gormx.ModelObjectType.field_list:type_name -> gormx.ObjectFieldList
	14, // 1: gormx.ObjectFieldList.list:type_name -> gormx.ObjectField
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_gormx_proto_init() }
func file_gormx_proto_init() {
	if File_gormx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gormx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModelListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertModelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelModelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateModelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchInsertModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchInsertModelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetModelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetModelRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelObjectType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectFieldList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gormx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gormx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gormx_proto_goTypes,
		DependencyIndexes: file_gormx_proto_depIdxs,
		MessageInfos:      file_gormx_proto_msgTypes,
	}.Build()
	File_gormx_proto = out.File
	file_gormx_proto_rawDesc = nil
	file_gormx_proto_goTypes = nil
	file_gormx_proto_depIdxs = nil
}
